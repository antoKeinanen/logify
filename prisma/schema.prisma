generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "cockroachdb"
    url      = env("DATABASE_URL")
}

model Log {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    logType   String
    level     String
    message   String?
    meta      Json?
    Site      Site?    @relation(fields: [siteId], references: [id])
    siteId    String?
}

model Site {
    id             String       @id @default(cuid())
    siteId         String       @unique
    name           String
    url            String
    logs           Log[]
    organization   Organization @relation(fields: [organizationId], references: [id])
    organizationId String
}

model Organization {
    id             String @id @default(cuid())
    organizationId String @unique
    name           String
    users          User[]
    sites          Site[]
}

model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? // @db.Text
    refresh_token_expires_in Int?
    access_token             String? // @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? // @db.Text
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String         @id @default(cuid())
    name          String?
    email         String?        @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    organizations Organization[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
